{"version":3,"mappings":"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","names":["messageIds","onMessage","self","message","messageId","error","result","callback","PromiseWorker","worker","e","userMessage","messageToSend","resolve","reject","channel","promiseWorker","postcss_worker","postCSSWorker","rollup_worker","rollupWorker","COMPILED_COMPONENTS_CACHE","html","component","buildStatic","format","cache_key","compile_page","res","has_js","s","get","site","locale","payload","escapeHtml","unsafe","blob","url","App","__vitePreload","component_data","accumulator","item","i","_","rendered","cssMap","css","raw","processed"],"sources":["../../../../../../node_modules/promise-worker/index.js","../../../../../../src/compiler/processors.js"],"sourcesContent":["'use strict'\n\nvar messageIds = 0\n\nfunction onMessage (self, e) {\n  var message = e.data\n  if (!Array.isArray(message) || message.length < 2) {\n    // Ignore - this message is not for us.\n    return\n  }\n  var messageId = message[0]\n  var error = message[1]\n  var result = message[2]\n\n  var callback = self._callbacks[messageId]\n\n  if (!callback) {\n    // Ignore - user might have created multiple PromiseWorkers.\n    // This message is not for us.\n    return\n  }\n\n  delete self._callbacks[messageId]\n  callback(error, result)\n}\n\nfunction PromiseWorker (worker) {\n  var self = this\n  self._worker = worker\n  self._callbacks = {}\n\n  worker.addEventListener('message', function (e) {\n    onMessage(self, e)\n  })\n}\n\nPromiseWorker.prototype.postMessage = function (userMessage) {\n  var self = this\n  var messageId = messageIds++\n\n  var messageToSend = [messageId, userMessage]\n\n  return new Promise(function (resolve, reject) {\n    self._callbacks[messageId] = function (error, result) {\n      if (error) {\n        return reject(new Error(error.message))\n      }\n      resolve(result)\n    }\n\n    /* istanbul ignore if */\n    if (typeof self._worker.controller !== 'undefined') {\n      // service worker, use MessageChannels because e.source is broken in Chrome < 51:\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=543198\n      var channel = new MessageChannel()\n      channel.port1.onmessage = function (e) {\n        onMessage(self, e)\n      }\n      self._worker.controller.postMessage(messageToSend, [channel.port2])\n    } else {\n      // web worker\n      self._worker.postMessage(messageToSend)\n    }\n  })\n}\n\nmodule.exports = PromiseWorker\n","import _ from 'lodash-es';\nimport PromiseWorker from 'promise-worker';\nimport { get } from 'svelte/store';\nimport { site } from '@primocms/builder';\nimport { locale } from '@primocms/builder';\nimport rollupWorker from './workers/rollup.worker.js?worker';\nimport postCSSWorker from './workers/postcss.worker.js?worker';\n\nconst postcss_worker = new PromiseWorker(new postCSSWorker());\nconst rollup_worker = new PromiseWorker(new rollupWorker());\n\nconst COMPILED_COMPONENTS_CACHE = new Map();\n\n/**\n * Compiles and renders a given component or page, caching the result.\n * @async\n * @param {Object} options - The options for rendering.\n * @param {Object|Object[]} options.component - The component(s) to be rendered. Can be a single component or an array of components for a page.\n * @param {boolean} [options.buildStatic=true] - Indicates whether to build the component statically or not.\n * @param {string} [options.format='esm'] - The module format to use, such as 'esm' for ES Modules.\n * @returns {Promise<Object>} Returns a payload containing the rendered HTML, CSS, JS, and other relevant data.\n * @throws {Error} Throws an error if the compilation or rendering fails.\n */\nexport async function html({ component, buildStatic = true, format = 'esm' }) {\n\tlet cache_key;\n\tif (!buildStatic) {\n\t\tcache_key = JSON.stringify({\n\t\t\tcomponent,\n\t\t\tformat\n\t\t});\n\t\tif (COMPILED_COMPONENTS_CACHE.has(cache_key)) {\n\t\t\treturn COMPILED_COMPONENTS_CACHE.get(cache_key);\n\t\t}\n\t}\n\n\tconst compile_page = Array.isArray(component);\n\n\tlet res;\n\ttry {\n\t\tconst has_js = compile_page ? component.some((s) => s.js) : !!component.js;\n\t\tres = await rollup_worker.postMessage({\n\t\t\tcomponent,\n\t\t\thydrated: buildStatic && has_js,\n\t\t\tbuildStatic,\n\t\t\tformat,\n\t\t\tsite: get(site),\n\t\t\tlocale: get(locale)\n\t\t});\n\t} catch (e) {\n\t\tconsole.log('error', e);\n\t\tres = {\n\t\t\terror: e.toString()\n\t\t};\n\t}\n\n\tlet payload;\n\n\tif (!res) {\n\t\tpayload = {\n\t\t\thtml: '<h1 style=\"text-align: center\">could not render</h1>'\n\t\t};\n\t\tres = {};\n\t} else if (res.error) {\n\t\tconsole.error(res.error);\n\t\tpayload = {\n\t\t\terror: escapeHtml(res.error)\n\t\t};\n\t\tfunction escapeHtml(unsafe) {\n\t\t\treturn unsafe\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;')\n\t\t\t\t.replace(/'/g, '&#039;');\n\t\t}\n\t} else if (buildStatic) {\n\t\tconst blob = new Blob([res.ssr], { type: 'text/javascript' });\n\t\tconst url = URL.createObjectURL(blob);\n\t\tconst { default: App } = await import(url /* @vite-ignore */);\n\t\tURL.revokeObjectURL(url);\n\n\t\tlet component_data;\n\t\tif (compile_page) {\n\t\t\t// get the component data for the page\n\t\t\tcomponent_data = component.reduce((accumulator, item, i) => {\n\t\t\t\tif (!_.isEmpty(item.data)) {\n\t\t\t\t\taccumulator[`component_${i}_props`] = item.data;\n\t\t\t\t}\n\t\t\t\treturn accumulator;\n\t\t\t}, {});\n\t\t} else {\n\t\t\tcomponent_data = component.data;\n\t\t}\n\n\t\tconst rendered = App.render(component_data);\n\n\t\tpayload = {\n\t\t\thead: rendered.head,\n\t\t\thtml: rendered.html,\n\t\t\tcss: rendered.css.code,\n\t\t\tjs: res.dom\n\t\t};\n\t} else {\n\t\tpayload = {\n\t\t\tjs: res.dom\n\t\t};\n\t}\n\n\tif (!buildStatic) {\n\t\tCOMPILED_COMPONENTS_CACHE.set(cache_key, payload);\n\t}\n\n\treturn payload;\n}\n\nconst cssMap = new Map();\nexport async function css(raw) {\n\t// return {\n\t//   css: ''\n\t// }\n\tif (cssMap.has(raw)) {\n\t\treturn { css: cssMap.get(raw) };\n\t}\n\tconst processed = await postcss_worker.postMessage({\n\t\tcss: raw\n\t});\n\tif (processed.message) {\n\t\treturn {\n\t\t\terror: processed.message\n\t\t};\n\t}\n\tcssMap.set(raw, processed);\n\treturn {\n\t\tcss: processed\n\t};\n}\n"],"file":"_app/immutable/chunks/processors.e799ac8a.js"}